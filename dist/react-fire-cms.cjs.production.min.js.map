{"version":3,"file":"react-fire-cms.cjs.production.min.js","sources":["../src/component/Dialog.tsx","../src/ConfigContext.ts","../src/hooks.ts","../src/dialog/MediaSelector.tsx","../src/component/editors/ImageEditor.tsx","../src/component/editors/NumberEditor.tsx","../src/component/Parallax.tsx","../src/component/ImageText.tsx","../src/ReactFireCMS.tsx","../src/component/editors/StringEditor.tsx","../src/component/editors/LongFormEditor.tsx","../src/component/editors/ComponentEditor.tsx","../src/component/DynamicLayout.tsx","../src/component/editors/LinkReferenceEditor.tsx","../src/component/editors/MenuEditor.tsx","../src/component/Editable.tsx","../src/component/DynamicComponent.tsx","../src/dialog/Delete.tsx","../src/component/Deleter.tsx","../src/dialog/Login.tsx","../src/dialog/Logout.tsx"],"sourcesContent":["import React from 'react';\nimport { IoCloseSharp } from 'react-icons/io5';\n\nexport type ButtonType = 'normal' | 'primary' | 'warning';\nexport type Buttons = { label: string, action: Function, type?: ButtonType, disabled?: boolean }[];\n\nexport interface DialogProps {\n  title?: string;\n  open?: boolean;\n  onClose?: () => void;\n  buttons?: Buttons\n};\n\nexport const Dialog: React.FC<DialogProps> = ({title, open, children, buttons, onClose}) => {  \n  return open ? (\n    <>\n      <div className='RFCMS__AntiClick' />\n      <div className='RFCMS__Dialog'>\n        <div className={'RFCMS__Dialog__Header'}>\n          {title}\n          { onClose && <IoCloseSharp onClick={onClose} className={'RFCMS__Dialog__Close'} />}\n        </div>\n        <div className={'RFCMS__Dialog__Content'}>\n          {children}\n        </div>\n        {buttons && \n          <div className={'RFCMS__Dialog__Buttons'}>\n            { buttons?.map(it => \n              <div key={it.label} \n                   className={`${'RFCMS__Dialog__Buttons__Button'} ${it.disabled && 'RFCMS__Dialog__Buttons__Button--disabled'} ${`RFCMS__Dialog__Buttons__Button--${it.type}`}`} \n                   onClick={() => {\n                     if (!it.disabled) { it.action() }\n                   }}>{it.label}</div>)}\n          </div>\n        }\n      </div>\n    </>\n  ) : null;\n}","import { createContext, useContext } from 'react';\nimport { CMSConfig } from './interface/CMSConfig';\n\nexport const ConfigContext = createContext(null as unknown as CMSConfig);\n\nexport const useConfig = () => useContext(ConfigContext);\n","import { useUser as _useUser } from 'reactfire';\nimport { useFirestore, useFirestoreDocData } from 'reactfire';\nimport { doc } from 'firebase/firestore';\nimport { useContext, useMemo } from 'react';\nimport { ConfigContext } from './ConfigContext';\n\nexport const useField = <T = any>(path: string, key: string): T => {\n  const storage = useFirestore();\n  const document = doc(storage, path);\n  const { data } = useFirestoreDocData(document);\n  return useMemo<T>(() => data?.[key], [data]);\n};\n\nexport const useDocument = (path: string) => {\n  const storage = useFirestore();\n  const document = doc(storage, `${path}`);\n  const { data } = useFirestoreDocData(document);\n  console.error(Object.keys(data || {}), data)\n  return { data, pageExists: Object.keys(data || {}).length > 0 };\n} \n\nexport const useConfig = () => useContext(ConfigContext);\n\nexport const useUser = () => {\n  const auth = _useUser();\n  return useMemo(() => ({\n    user: auth?.data,\n    userExists: !!auth?.data?.email,\n  }), [auth]);\n}","import React from 'react';\nimport { listAll, ref, StorageReference, getDownloadURL } from \"firebase/storage\";\nimport { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { useStorage } from \"reactfire\";\nimport { Dialog, Buttons } from \"../component/Dialog\"\nimport { useConfig } from '../hooks';\n\nexport interface MediaSelectorProps {\n  onSelect: (url: string) => void;\n}\n\ninterface FirebaseImageProps {\n  image: StorageReference;\n  selected?: boolean;\n  onSelect: (url: string) => void;\n}\n\nconst FirebaseImage: React.FC<FirebaseImageProps> = (props) => {\n  const {image, selected, onSelect } = props;\n  const [url, setUrl] = useState('');\n\n  useEffect(() => {\n    if (!image) return;\n    getDownloadURL(image)\n      .then(setUrl)\n      .catch(console.error)\n  }, [image]);\n\n  return (\n    <div onClick={() => onSelect(url)} \n         className={`RFCMS__MediaSelector__Item ${selected && 'RFCMS__MediaSelector__Item--Selected'}`}>\n      <img src={url} alt={image?.name} className=\"RFCMS__MediaSelector__Item__Image\" />\n      <span className=\"RFCMS__MediaSelector__Item__Text\">{image?.name}</span>\n    </div>\n  );\n}\n\nconst MediaSelector: React.FC<MediaSelectorProps> = ({onSelect}) => {\n  const config = useConfig();\n  const [error, setError] = useState('');\n  const [open, setOpen] = useState(false);\n  const [items, setItems] = useState([] as StorageReference[]);\n  const [selection, setSelection] = useState(-1);\n  const [url, setUrl] = useState('');\n\n  const storage = useStorage();\n\n  const showDialog = useCallback((e) => {\n    e.preventDefault();\n    setOpen(true);\n  }, [setOpen])\n\n  useEffect(() => {\n    if (!open) return;\n    listAll(ref(storage, config.firebase.storage.bucket))\n      .then(r => {\n        setItems(r.items);\n      })\n      .catch(e => setError(e));\n  }, [storage, open])\n\n  const buttons = useMemo<Buttons>(() => {\n    return [\n      { label: 'Cancel', action: () => setOpen(false) },\n      { label: 'Upload', action: () => {} },\n      { label: 'Select', action: () => {\n        onSelect(url);\n        setOpen(false);\n      }, disabled: selection === -1 },\n    ]\n  }, [onSelect, selection, url]);\n\n  return (\n    <div>\n      <button onClick={showDialog}>Select Image</button>\n      { open &&\n        <Dialog buttons={buttons} title=\"Media Gallery\" open={open} onClose={() => setOpen(false)}>\n          { error && <span className=\"RFCMS__TextStyles__Error\">{error}</span> }\n          <div className=\"RFCMS__MediaSelector__Grid\">\n            {\n              items.map((item, index) => (              \n                <FirebaseImage \n                  onSelect={(url) => {\n                    setSelection(index);\n                    setUrl(url);\n                  }} \n                  selected={index === selection} \n                  image={item} />\n              ))\n            }\n          </div>\n        </Dialog>\n      }\n    </div>\n  )\n}\n\nexport default MediaSelector;","import React from 'react';\nimport { EditorComponentProps } from '../../interface/EditorComponentProps';\nimport MediaSelector from \"../../dialog/MediaSelector\";\n\ninterface ImageEditorProps extends EditorComponentProps<string> {}\n\nconst ImageEditor: React.FC<ImageEditorProps> = ({onUpdate, value}) => {\n  return (\n    <div className=\"RFCMS__Editable__Dialog__Image\">\n      <input \n              onChange={(e) => onUpdate(e.target.value)} \n              value={value} />\n      <MediaSelector onSelect={onUpdate} />\n    </div>\n  );\n\n}\n\nexport default ImageEditor;","import React from 'react';\nimport { EditorComponentProps } from '../../interface/EditorComponentProps';\n\ninterface NumberEditorProps extends EditorComponentProps<string> {}\n\nconst NumberEditor: React.FC<NumberEditorProps> = ({onUpdate, value}) => {\n  return (\n    <>\n      <input \n              type='number'\n              onChange={(e) => onUpdate(e.target.value)} \n              value={value} />\n    </>);\n\n}\n\nexport default NumberEditor;","import React from 'react';\nimport { createRef, useCallback, useEffect, useState } from \"react\";\nimport { ComponentDefinition } from \"../interface\";\nimport ImageEditor from \"./editors/ImageEditor\";\nimport NumberEditor from \"./editors/NumberEditor\";\n\ninterface ParallaxProps {\n  src: string;\n  zoom: number;\n}\n\nconst Parallax: React.FC<ParallaxProps> = ({src, zoom}) => {\n  const ref = createRef<HTMLDivElement>();\n  const [offset, setOffset] = useState(-1);\n\n  const scrollHandler = useCallback(() => {    \n    const offset = ref.current?.getBoundingClientRect()?.top || 0;\n    const percent = offset / window.innerHeight / 2;\n    setOffset(percent - 1);\n  }, [ref])\n\n  useEffect(() => { \n    window.addEventListener('scroll', scrollHandler);\n    return () => { window.removeEventListener('scroll', scrollHandler)}\n  }, [scrollHandler]);\n\n  return (\n    <div ref={ref} className=\"RFCMS__Parallax\">\n      <div className=\"RFCMS__Parallax__Inner\" \n           style={{backgroundImage: `url(${src})`, \n                  width: `100%`,\n                  height: `calc(100% + ${zoom * 2}px)`,\n                  backgroundPositionY: `calc(${zoom * offset}px)`,\n                  }}/>\n\n    </div>\n  )\n}\n\nexport const ParallaxDefinition: ComponentDefinition = {\n  name: 'Parallax',\n  key: 'parallax',\n  component: Parallax,\n  Editor: ({onDataSet, data}) => {\n    const update = (src?: string, zoom?: string) => {\n      onDataSet({\n        src: src || data.src, \n        zoom: zoom || data.zoom\n      });\n    };\n\n    return (\n      <div className=\"RFCMS__EditorStyles__Editor__Form\">\n        <span>Source</span>\n        <ImageEditor value={data?.src} onUpdate={s => update(s)} />\n        <span>Zoom</span>\n        <NumberEditor value={data?.zoom} onUpdate={z => update(undefined, z)} />\n      </div>\n    )\n  }\n}\n","import React from 'react';\nimport { ComponentDefinition } from \"../interface/ComponentDefinition\";\nimport ImageEditor from './editors/ImageEditor';\n\ninterface ImageTextProps {\n  src: string;\n  imageStyle?: any;\n  textStyle?: any;\n  imageClass?: string;\n  textClass?: string;\n  alt?: string;\n  style?: any;\n}\n\nexport const ImageText: React.FC<ImageTextProps> = ({alt, style, imageStyle, textStyle, imageClass, textClass, src}) => {\n  if (src?.startsWith('http')) {\n    return <img src={src} style={{...style, ...imageStyle}} className={imageClass} alt={alt} />\n  } else {\n    return <span style={{...style, ...textStyle}} className={textClass}>{src}</span>\n  }\n}\n\nexport const ImageTextDefinition: ComponentDefinition = {\n  name: 'Image / Text',\n  key: 'imageText',\n  component: ImageText,\n  Editor: ({onDataSet, data}) => (\n    <div className=\"RFCMS__EditorStyles__Editor__Form\">\n      <span>Image URL / Text</span>\n      <ImageEditor value={data} onUpdate={onDataSet} />\n    </div>\n  )  \n}\n","import React from 'react';\nimport { FirebaseAppProvider, DatabaseProvider, AuthProvider, StorageProvider, FirestoreProvider, useFirebaseApp } from 'reactfire';\nimport { getAuth } from 'firebase/auth';\nimport { getDatabase } from 'firebase/database';\nimport { getStorage } from 'firebase/storage';\nimport { getFirestore } from 'firebase/firestore';\n\nimport { ParallaxDefinition } from './component/Parallax';\nimport { ImageTextDefinition } from './component/ImageText';\nimport { CMSConfig } from \"./interface/CMSConfig\"\nimport { useConfig } from './hooks';\nimport { ConfigContext } from './ConfigContext';\n\ninterface ReactFireCMSProps {\n  config: CMSConfig;\n}\n\nconst mergeConfig = (config: CMSConfig) => ({\n  ...config,\n  components: [\n    ...config.components,\n    ParallaxDefinition,\n    ImageTextDefinition,   \n  ]\n})\n\nconst FirebaseProvider: React.FC = ({children}) => {\n  const firebaseConfig = useConfig();\n  return (\n    <FirebaseAppProvider firebaseConfig={firebaseConfig.firebase.config}>\n      {children}\n    </FirebaseAppProvider>\n  )\n}\n\nconst FirebaseComponents: React.FC = ({children}) => {\n  const app = useFirebaseApp();\n  const database = getDatabase(app);\n  const auth = getAuth(app);\n  const store = getStorage(app);\n  const firestore = getFirestore(app);\n\n  return (\n    <AuthProvider sdk={auth}>\n      <DatabaseProvider sdk={database}>\n        <StorageProvider sdk={store}>\n          <FirestoreProvider sdk={firestore}>\n            {children}\n          </FirestoreProvider>\n        </StorageProvider>\n      </DatabaseProvider>\n    </AuthProvider>\n  )\n}\n\nexport const ReactFireCMS: React.FC<ReactFireCMSProps> = ({config, children}) => {\n  if (true) return (\n    <ConfigContext.Provider value={mergeConfig(config)}>\n      <FirebaseProvider>\n        <FirebaseComponents>\n          {children}\n        </FirebaseComponents>\n      </FirebaseProvider>\n    </ConfigContext.Provider>\n  );\n}","import React from 'react';\nimport { EditorComponentProps } from '../../interface/EditorComponentProps';\n\ninterface StringEditorProps extends EditorComponentProps<string> {}\n\nconst StringEditor: React.FC<StringEditorProps> = ({onUpdate, value}) => {\n  return (\n    <>\n      <input \n              onChange={(e) => onUpdate(e.target.value)} \n              value={value} />\n    </>);\n\n}\n\nexport default StringEditor;","import React from 'react';\nimport { ContentState, convertToRaw, EditorState } from 'draft-js';\nimport { Editor } from 'react-draft-wysiwyg';\nimport { EditorComponentProps } from '../../interface/EditorComponentProps';\nimport draftToHtml from 'draftjs-to-html';\nimport htmlToDraft from 'html-to-draftjs';\n\ninterface LongFormEditorProps extends EditorComponentProps<string> {}\n\nconst LongFormEditor: React.FC<LongFormEditorProps> = ({onUpdate, value}) => {\n  const blocks = htmlToDraft(value);\n  const state = ContentState.createFromBlockArray(\n    blocks.contentBlocks,\n    blocks.entityMap\n  );\n  const editorState = EditorState.createWithContent(state)  \n\n  return (\n    <>\n      <div className=\"RFCMS__Editable__Dialog__RichEditor\">\n        <Editor \n                defaultEditorState={editorState}\n                onEditorStateChange={(e: any) => {\n                  onUpdate(draftToHtml(convertToRaw(e.getCurrentContent())))\n                }}/>\n      </div>\n    </>\n  ) \n}\n\nexport default LongFormEditor;","import React from 'react';\nimport { EditorComponentProps } from '../../interface/EditorComponentProps';\nimport { useConfig } from \"../../hooks\";\nimport { DescribeDynamicComponent } from '../../interface/DescribeDynamicComponent';\n\ninterface ComponentEditorProps extends EditorComponentProps<DescribeDynamicComponent> {}\n\nconst ComponentEditor: React.FC<ComponentEditorProps> = ({onUpdate, value}) => {\n  const config = useConfig();\n  \n  const component = value?.component\n  const props = value?.props\n\n  const update = (component?: string, props?: any) => {\n    onUpdate({\n      component: component || value?.component,\n      props: props || value?.props\n    });\n  }\n\n  const Editor = config.components.find(it => it.key === component)?.Editor;\n\n  return (\n    <>\n      <select value={component} onChange={e => update(e.target.value)}>\n        <option>Select a Component</option>\n        { config.components.map((c, i) => <option key={`${c.key}_${i}`} value={c.key}>{c.name}</option>)}\n      </select>\n      { Editor && <Editor onDataSet={(data) => update(undefined, data)} data={props} />}\n    </>);\n\n}\n\nexport default ComponentEditor;","import React, { useCallback } from 'react';\nimport { IoCloseCircle } from 'react-icons/io5';\nimport { DynamicComponent, DynamicComponentDefinition } from '..';\nimport { ComponentDefinition, DynamicLayoutCell } from '../interface';\nimport StringEditor from './editors/StringEditor';\n\nexport interface DynamicLayoutProps {\n  cells?: DynamicLayoutCell[]\n}\n\nexport const DynamicLayout: React.FC<DynamicLayoutProps> = ({cells}) => {\n  return (\n    <>\n      {cells?.map?.(comp => <DynamicComponent content={comp.description} />)}\n    </>\n  )\n}\n\nexport const DynamicLayoutDefinition: ComponentDefinition<DynamicLayoutCell[]> = {\n  name: 'DynamicLayout',\n  key: 'dynamicLayout',\n  component: DynamicLayout,\n  Editor: ({onDataSet, data}) => {  \n    const addRow = useCallback(e => {\n      e.preventDefault();\n      onDataSet([...(data || []), {\n        description: { component: undefined, props: {} },\n        size: '100%',\n      }]);\n    }, [data]);\n\n    const removeItemAt = useCallback((index: number) => {\n      const after = [...data.slice(0,index), ...data.slice(index+1)];\n      onDataSet(after)\n    }, [data]);\n    \n    const replaceItemAt = useCallback((index: number, description: any, size?: string) => {\n      const after = [\n        ...data.slice(0,index), \n        { \n          description: description || data[index].description,\n          size: size || data[index].size,\n        }, \n        ...data.slice(index+1)];\n      onDataSet(after)\n    }, [data]);\n\n    return (\n      <div className=\"RFCMS__EditorStyles__Editor__Form\">\n        <button onClick={addRow}>Add Row</button>\n        <div>\n          {\n            data?.map((it, index) => \n              <div key={`${index}_`} className=\"RFCMS__DynamicLayout__Editor\">\n                <div className=\"RFCMS__DynamicLayout__Editor__Header\">\n                  <label>Size (See guide for accepted formats)</label>\n                  <StringEditor value={it.size} onUpdate={data => replaceItemAt(index, undefined, data)} />\n                  <IoCloseCircle className=\"RFCMS__DynamicLayout__Editor__Header__Delete\" onClick={() => removeItemAt(index)} />\n                </div>\n                <DynamicComponentDefinition.Editor                   \n                  onDataSet={(data) => replaceItemAt(index, data)} \n                  data={it.description} \n                />\n              </div>\n            )\n          }\n        </div>\n      </div>\n    )\n  }\n}\n","import React from 'react';\nimport { EditorComponentProps } from '../../interface/EditorComponentProps';\nimport { LinkReference } from '../../interface/LinkReference';\n\ninterface StringEditorProps extends EditorComponentProps<LinkReference> {}\n\nexport const LinkReferenceEditor: React.FC<StringEditorProps> = ({onUpdate, value}) => {\n  const updateValue = (content?: string, url?: string) => {\n    onUpdate({\n      content: content || value.content,\n      url: url || value.url,\n    })\n  }\n  return (\n    <>\n      <input \n              onChange={(e) => updateValue(e.target.value)} \n              value={value.content} />\n      <input \n              onChange={(e) => updateValue(undefined, e.target.value)} \n              value={value.url} />\n    </>);\n\n}\n\nexport default LinkReferenceEditor;","import React, { useCallback } from 'react';\nimport { IoCloseCircle } from 'react-icons/io5';\nimport { EditorComponentProps } from '../../interface/EditorComponentProps';\nimport { LinkReference } from '../../interface/LinkReference';\nimport LinkReferenceEditor from './LinkReferenceEditor';\n\ninterface MenuEditorProps extends EditorComponentProps<LinkReference[]> {}\n\nexport const MenuEditor: React.FC<MenuEditorProps> = ({onUpdate, value}) => {\n  const addRow = useCallback(e => {\n    e.preventDefault();\n    onUpdate([...(value || []), {\n      url: '',\n      content: '',\n    }]);\n  }, [value]);\n\n  const removeItemAt = useCallback((index: number) => {\n    const after = [...value.slice(0,index), ...value.slice(index+1)];\n    onUpdate(after)\n  }, [value]);\n  \n  const replaceItemAt = useCallback((index: number, data: LinkReference) => {\n    const after = [\n      ...value.slice(0,index), \n      { \n        ...data\n      },\n      ...value.slice(index+1)];\n      onUpdate(after)\n  }, [value]);\n\n  return (\n    <div className=\"RFCMS__EditorStyles__Editor__Form\">\n      <button onClick={addRow}>Add Menu Item</button>\n      <div>\n        {\n          value?.map((it, index) => \n            <div key={`${index}_`} className=\"RFCMS__MenuEditor__Editor\">\n              <div className=\"RFCMS__MenuEditor__Editor__Row\">\n                <LinkReferenceEditor               \n                  onUpdate={(data) => replaceItemAt(index, data)} \n                  value={it} \n                />\n                <IoCloseCircle className=\"RFCMS__DynamicLayout__Editor__Header__Delete\" onClick={() => removeItemAt(index)} />\n              </div>\n            </div>\n          )\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default MenuEditor;\n\n","import React from 'react';\nimport { doc, setDoc } from \"firebase/firestore\";\nimport { FormEvent, useCallback, useEffect, useState } from \"react\";\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\nimport { useHotkeys } from \"react-hotkeys-hook\";\nimport { FaPencilAlt } from \"react-icons/fa\";\nimport { useUser, useFirestore, useFirestoreDocData } from \"reactfire\";\nimport { Dialog, Buttons, DialogProps } from \"./Dialog\";\nimport StringEditor from \"./editors/StringEditor\";\nimport LongFormEditor from \"./editors/LongFormEditor\";\nimport ComponentEditor from \"./editors/ComponentEditor\";\nimport { ImageTextDefinition } from '..';\nimport { DynamicLayoutDefinition } from './DynamicLayout';\nimport MenuEditor from './editors/MenuEditor';\nimport LinkReferenceEditor from './editors/LinkReferenceEditor';\n\nexport type FieldType = 'string' | 'longform' | 'boolean' | 'image' | \n                        'component' | 'dynamicLayout' | 'menu' | 'url';\n\nexport interface EditorField {\n  name: string,\n  hint?: string,\n  type: FieldType,\n}\n\nexport type OnDataSet = (data: string) => void;\n\ninterface EditableProps {\n  fields: EditorField[]\n  path: string,\n  style?: any,\n  className?: any,\n}\n\ninterface EditableDialogProps extends DialogProps {\n  fields: EditorField[],\n  path: string,\n}\n\nconst EditableDialog: React.FC<EditableDialogProps> = ({open, fields, path, onClose}) => {\n  const firestore = useFirestore();\n  const document = doc(firestore, path);\n  const data = useFirestoreDocData(document);\n  const [error, setError] = useState('')\n  const [toSubmit, setToSubmit] = useState({} as {[key:string]: any})\n\n  useEffect(() => {\n    setToSubmit(\n      fields.reduce((p, c) => {\n        const current = p;\n        current[c.name] = data.data?.[c.name] || undefined;\n        return current;\n      }, {} as {[key:string]: any})\n    )\n  }, [fields, data]);\n\n  const submitChanges = (e?: FormEvent) => {\n    e?.preventDefault();\n    console.error('Submitting: ', toSubmit);\n\n    setDoc(document, toSubmit, {merge: true})\n      .then(onClose)\n      .catch((e) => setError(e));\n  }\n\n  const updateField = useCallback((name: string, value: any) => {\n    const copy = {...toSubmit};\n    copy[name] = value;\n    setToSubmit(copy);\n  }, [toSubmit]);\n\n  const buttons: Buttons = [\n    { label: 'Cancel', action: () => onClose?.()},\n    { label: 'Save', action: submitChanges },\n  ]\n\n  const renderEditor = (field: EditorField) => {\n    switch (field.type) {\n      case 'string':\n        return <StringEditor onUpdate={v => updateField(field.name, v)} value={toSubmit[field.name]} />\n      case 'image':\n        return <ImageTextDefinition.Editor onDataSet={v => updateField(field.name, v)} data={toSubmit[field.name]} />\n      case 'longform':\n        return <LongFormEditor onUpdate={v => updateField(field.name, v)} value={toSubmit[field.name]} />\n      case 'component':\n        return <ComponentEditor onUpdate={v => updateField(field.name, v)} value={toSubmit[field.name]} />\n      case 'dynamicLayout': \n        return <DynamicLayoutDefinition.Editor onDataSet={v => updateField(field.name, v)} data={toSubmit[field.name]} />  \n      case 'url':\n        return <LinkReferenceEditor onUpdate={v => updateField(field.name, v)} value={toSubmit[field.name]} />\n      case 'menu':\n        return <MenuEditor onUpdate={v => updateField(field.name, v)} value={toSubmit[field.name]} />\n      default:\n        return <></>;  \n    }\n  }\n\n  return (\n    <Dialog title=\"Edit Fields\" {...{onClose, open}} buttons={buttons}>\n      { open && (\n        <form className=\"RFCMS__Editable__Dialog\" onSubmit={submitChanges}>\n        <span className='Text__Error'>{error}</span>\n        {\n          fields?.map(field => (\n            <div key={field.name} className=\"RFCMS__Editable__Dialog__Field\">\n              <div className=\"RFCMS__Editable__Dialog__Label\">\n                {field.hint || field.name}\n              </div>\n              { renderEditor(field) }\n            </div>\n          ))\n        }\n      </form>\n      )\n    }\n    </Dialog>\n  )\n}\n\nexport const Editable: React.FC<EditableProps> = ({fields, style, path, className, children}) => {\n  const user = useUser();\n  const [shown, setShown] = useState(false);\n  const [highlight, setHighlight] = useState(false);\n  const [preview, setPreview] = useState(false);\n\n  useHotkeys('e', () => { setHighlight(true) });\n  useHotkeys('e', () => { setHighlight(false) }, { keydown: false, keyup: true });\n  useHotkeys('p', () => { setPreview(true) });\n  useHotkeys('p', () => { setPreview(false) }, { keydown: false, keyup: true });\n\n  return user.data ? (\n    <div style={style} className={`${className} RFCMS__Editable ${preview && 'RFCMS__Editable--Preview'}`}>\n      {children}\n      <EditableDialog path={path} open={shown} fields={fields} onClose={() => setShown(false)} />\n      <div className={`RFCMS__Editable__Pencil ${highlight && 'RFCMS__Editable__Pencil--Highlight'} ${preview && 'RFCMS__Editable__Pencil--Preview'}`}>\n        <FaPencilAlt onClick={() => setShown(true)} className=\"RFCMS__Editable__Pencil__Text\" />\n      </div>\n    </div>\n  ) : (<>{children}</>)\n}","import React from 'react';\nimport { useConfig } from '../hooks';\nimport { ComponentDefinition } from '../interface/ComponentDefinition';\nimport { DescribeDynamicComponent } from '../interface/DescribeDynamicComponent';\nimport ComponentEditor from './editors/ComponentEditor';\n\ninterface DynamicComponentProps {\n  content: DescribeDynamicComponent;\n  className?: string;\n  style?: string;\n}\n\nexport const DynamicComponent: React.FC<DynamicComponentProps> = ({content, className, style}) => {\n  const config = useConfig();\n  const component = content?.component;\n  const props = (content?.props || {}) as DescribeDynamicComponent;\n  const Component = config.components.find(it => it.key === component)?.component;\n\n  return (\n    Component ? <Component {...props} className={className} style={style} /> : <></>\n  )\n}\n\nexport const DynamicComponentDefinition: ComponentDefinition = {\n  name: 'Dynamic Component',\n  key: 'dynamicComponent',\n  component: DynamicComponent,\n  Editor: ({onDataSet, data}) => {\n    return (\n      <div className=\"RFCMS__EditorStyles__Editor__Form\">\n        <span>Component</span>\n        <ComponentEditor value={data} onUpdate={onDataSet} />\n      </div>\n    )\n  }\n}","import React from 'react';\nimport { useCallback } from 'react';\nimport { Dialog, Buttons, DialogProps } from '../component/Dialog'\n\nexport interface LogoutProps extends DialogProps {\n  identity: string;\n  onDelete: () => Promise<void>;\n}\n\nexport const Delete: React.FC<LogoutProps> = ({open, identity, onClose, onDelete}) => {\n  const doDelete = useCallback(() => {\n    onDelete().then(onClose);  \n  }, [onDelete, onClose]);\n\n  const buttons: Buttons = [\n    { label: 'Cancel', action: () => onClose?.() }, \n    { label: 'Delete', action: doDelete, type: 'warning' }\n  ];\n  \n  return (\n    <Dialog \n      title={`Delete ${identity}`} \n      open={open} \n      onClose={onClose}\n      buttons={buttons}>\n      Do you wish to delete {identity}\n    </Dialog>\n  )\n}\n","import { deleteDoc, doc } from 'firebase/firestore';\nimport React from 'react';\nimport { useState } from \"react\";\nimport { useHotkeys } from \"react-hotkeys-hook\";\nimport { FaTrash } from 'react-icons/fa';\nimport { useFirestore } from 'reactfire';\nimport { DialogProps } from '..';\nimport { Delete } from '../dialog/Delete';\nimport { useUser } from \"../hooks\";\n\nexport interface DeleterProps extends DialogProps {\n  path: string;\n  style?: any;\n  className?: any;\n}\n\nexport const Deleter: React.FC<DeleterProps> = ({style, className, path, children}) => {\n  const { userExists } = useUser();\n  const [shown, setShown] = useState(false);\n  const [highlight, setHighlight] = useState(false);\n  const [preview, setPreview] = useState(false);\n\n  const firestore = useFirestore();\n\n  useHotkeys('e', () => { setHighlight(true) });\n  useHotkeys('e', () => { setHighlight(false) }, { keydown: false, keyup: true });\n  useHotkeys('p', () => { setPreview(true) });\n  useHotkeys('p', () => { setPreview(false) }, { keydown: false, keyup: true });\n\n  return userExists ? (\n    <div style={style} className={`${className} RFCMS__Editable ${preview && 'RFCMS__Editable--Preview'}`}>\n      <Delete open={shown} identity=\"this page\" onClose={() => setShown(false)} onDelete={() => deleteDoc(doc(firestore, path))}/>\n      <div className={`RFCMS__Editable__Trash ${highlight && 'RFCMS__Editable__Trash--Highlight'}  ${preview && 'RFCMS__Editable__Pencil--Preview'}`}>\n        <FaTrash onClick={() => setShown(true)} className=\"RFCMS__Editable__Pencil__Text\" />\n      </div>\n    </div>\n  ) : (<>{children}</>)\n}","import React from 'react';\nimport { signInWithEmailAndPassword, setPersistence, browserSessionPersistence } from 'firebase/auth';\nimport { useCallback, useState } from 'react';\nimport { useAuth } from 'reactfire'\nimport { Dialog, Buttons, DialogProps } from '../component/Dialog'\n\nexport interface LoginProps extends DialogProps {}\n\nexport const Login: React.FC<LoginProps> = ({open, onClose}) => {\n  const auth = useAuth();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const doLogin = useCallback((e) => {\n    e?.preventDefault();\n    setPersistence(auth, browserSessionPersistence)\n      .then(() => signInWithEmailAndPassword(auth, email, password)) \n      .then(onClose)\n  }, [email, password, auth, onClose]);\n\n  const buttons: Buttons = [\n    {label: 'Login', action: doLogin}\n  ]\n  return (\n    <Dialog title=\"Login\" open={open} onClose={onClose} buttons={buttons}>\n      <form onSubmit={doLogin}\n            className=\"RFCMS__LoginDialog__Content\">\n        <label htmlFor=\"email\">Email</label>\n        <input value={email} onChange={v => setEmail(v.target.value)} type=\"email\" id=\"email\" />\n        <label htmlFor=\"password\">Password</label>\n        <input value={password} onChange={v => setPassword(v.target.value)} type=\"password\" id=\"password\"/>\n      </form>\n    </Dialog>\n  )\n}\n","import React from 'react';\nimport { signOut, setPersistence, browserSessionPersistence } from 'firebase/auth';\nimport { useCallback } from 'react';\nimport { useAuth } from 'reactfire'\nimport { Dialog, Buttons, DialogProps } from '../component/Dialog'\n\nexport interface LogoutProps extends DialogProps {}\n\nexport const Logout: React.FC<LogoutProps> = ({open, onClose}) => {\n  const auth = useAuth();\n\n  const doLogout = useCallback(() => {\n    setPersistence(auth, browserSessionPersistence)\n      .then(() => signOut(auth))\n      .then(onClose);  \n  }, [auth, onClose]);\n\n  const buttons: Buttons = [\n    { label: 'Cancel', action: () => onClose?.() }, \n    { label: 'Logout', action: doLogout, type: 'warning' }\n  ];\n  \n  return (\n    <Dialog \n      title=\"Login\" \n      open={open} \n      onClose={onClose}\n      buttons={buttons}>\n      Are you sure you wish to logout?\n    </Dialog>\n  )\n}\n"],"names":["Dialog","title","children","buttons","onClose","open","React","className","IoCloseSharp","onClick","map","it","key","label","disabled","type","action","ConfigContext","createContext","useConfig","useContext","useUser","auth","_useUser","useMemo","user","data","userExists","_auth$data","email","FirebaseImage","props","image","selected","onSelect","useState","url","setUrl","useEffect","getDownloadURL","then","console","error","src","alt","name","MediaSelector","config","setError","setOpen","items","setItems","selection","setSelection","storage","useStorage","showDialog","useCallback","e","preventDefault","listAll","ref","firebase","bucket","r","item","index","ImageEditor","onUpdate","onChange","target","value","NumberEditor","ParallaxDefinition","component","zoom","createRef","offset","setOffset","scrollHandler","percent","current","getBoundingClientRect","top","window","innerHeight","addEventListener","removeEventListener","style","backgroundImage","width","height","backgroundPositionY","Editor","onDataSet","update","s","z","undefined","ImageText","imageStyle","textStyle","imageClass","textClass","startsWith","ImageTextDefinition","FirebaseProvider","firebaseConfig","FirebaseAppProvider","FirebaseComponents","app","useFirebaseApp","database","getDatabase","getAuth","store","getStorage","firestore","getFirestore","AuthProvider","sdk","DatabaseProvider","StorageProvider","FirestoreProvider","StringEditor","LongFormEditor","blocks","htmlToDraft","state","ContentState","createFromBlockArray","contentBlocks","entityMap","editorState","EditorState","createWithContent","defaultEditorState","onEditorStateChange","draftToHtml","convertToRaw","getCurrentContent","ComponentEditor","components","find","_config$components$fi","c","i","DynamicLayout","cells","comp","DynamicComponent","content","description","DynamicLayoutDefinition","addRow","size","removeItemAt","after","slice","replaceItemAt","IoCloseCircle","DynamicComponentDefinition","LinkReferenceEditor","updateValue","MenuEditor","EditableDialog","fields","path","useFirestore","document","doc","useFirestoreDocData","toSubmit","setToSubmit","reduce","p","submitChanges","setDoc","merge","updateField","copy","onSubmit","field","hint","v","renderEditor","Component","Delete","identity","onDelete","shown","setShown","highlight","setHighlight","preview","setPreview","useHotkeys","keydown","keyup","deleteDoc","FaTrash","FaPencilAlt","useAuth","setEmail","password","setPassword","doLogin","setPersistence","browserSessionPersistence","signInWithEmailAndPassword","htmlFor","id","signOut","Provider","Object","keys","pageExists","length"],"mappings":"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"}