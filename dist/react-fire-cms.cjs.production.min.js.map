{"version":3,"file":"react-fire-cms.cjs.production.min.js","sources":["../src/component/Dialog.tsx","../src/dialog/MediaSelector.tsx","../src/component/Editable/ImageEditor.tsx","../src/component/Editable/NumberEditor.tsx","../src/component/Parallax.tsx","../src/component/Editable/StringEditor.tsx","../src/component/ImageText.tsx","../src/ReactFireCms.tsx","../src/component/Editable/LongFormEditor.tsx","../src/component/Editable/ComponentEditor.tsx","../src/component/Editable/index.tsx","../src/component/DynamicComponent.tsx","../src/dialog/Login.tsx","../src/dialog/Logout.tsx"],"sourcesContent":["import React from 'react';\nimport { IoCloseSharp } from 'react-icons/io5';\n\nexport type ButtonType = 'normal' | 'primary' | 'warning';\nexport type Buttons = { label: string, action: Function, type?: ButtonType, disabled?: boolean }[];\n\nexport interface DialogProps {\n  title?: string;\n  open?: boolean;\n  onClose?: () => void;\n  buttons?: Buttons\n};\n\nexport const Dialog: React.FC<DialogProps> = ({title, open, children, buttons, onClose}) => {  \n  return open ? (\n    <>\n      <div className='RFC__AntiClick' />\n      <div className='RFC__Dialog'>\n        <div className={'RFC__Dialog__Header'}>\n          {title}\n          { onClose && <IoCloseSharp onClick={onClose} className={'RFC__Dialog__Close'} />}\n        </div>\n        <div className={'RFC__Dialog__Content'}>\n          {children}\n        </div>\n        {buttons && \n          <div className={'RFC__Dialog__Buttons'}>\n            { buttons?.map(it => \n              <div key={it.label} \n                   className={`${'RFC__Dialog__Buttons__Button'} ${it.disabled && 'RFC__Dialog__Buttons__Button--disabled'} ${`RFC__Dialog__Buttons__Button--${it.type}`}`} \n                   onClick={() => {\n                     if (!it.disabled) { it.action() }\n                   }}>{it.label}</div>)}\n          </div>\n        }\n      </div>\n    </>\n  ) : null;\n}","import React from 'react';\nimport { listAll, ref, StorageReference, getDownloadURL } from \"firebase/storage\";\nimport { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { useStorage } from \"reactfire\";\nimport { Dialog, Buttons } from \"../component/Dialog\"\nimport { useConfig } from '../ReactFireCms';\n\nexport interface MediaSelectorProps {\n  onSelect: (url: string) => void;\n}\n\ninterface FirebaseImageProps {\n  image: StorageReference;\n  selected?: boolean;\n  onSelect: (url: string) => void;\n}\n\nconst FirebaseImage: React.FC<FirebaseImageProps> = (props) => {\n  const {image, selected, onSelect } = props;\n  const [url, setUrl] = useState('');\n\n  useEffect(() => {\n    if (!image) return;\n    getDownloadURL(image)\n      .then(setUrl)\n      .catch(console.error)\n  }, [image]);\n\n  return (\n    <div onClick={() => onSelect(url)} \n         className={`RFC__MediaSelector__Item ${selected && 'RFC__MediaSelector__Item--Selected'}`}>\n      <img src={url} alt={image?.name} className=\"RFC__MediaSelector__Item__Image\" />\n      <span className=\"RFC__MediaSelector__Item__Text\">{image?.name}</span>\n    </div>\n  );\n}\n\nconst MediaSelector: React.FC<MediaSelectorProps> = ({onSelect}) => {\n  const config = useConfig();\n  const [error, setError] = useState('');\n  const [open, setOpen] = useState(false);\n  const [items, setItems] = useState([] as StorageReference[]);\n  const [selection, setSelection] = useState(-1);\n  const [url, setUrl] = useState('');\n\n  const storage = useStorage();\n\n  const showDialog = useCallback((e) => {\n    e.preventDefault();\n    setOpen(true);\n  }, [setOpen])\n\n  useEffect(() => {\n    if (!open) return;\n    listAll(ref(storage, config.firebase.storage.bucket))\n      .then(r => {\n        setItems(r.items);\n      })\n      .catch(e => setError(e));\n  }, [storage, open])\n\n  const buttons = useMemo<Buttons>(() => {\n    return [\n      { label: 'Cancel', action: () => setOpen(false) },\n      { label: 'Upload', action: () => {} },\n      { label: 'Select', action: () => {\n        onSelect(url);\n        setOpen(false);\n      }, disabled: selection === -1 },\n    ]\n  }, [onSelect, selection, url]);\n\n  return (\n    <div>\n      <button onClick={showDialog}>Select Image</button>\n      { open &&\n        <Dialog buttons={buttons} title=\"Media Gallery\" open={open} onClose={() => setOpen(false)}>\n          { error && <span className=\"RFC__TextStyles__Error\">{error}</span> }\n          <div className=\"RFC__MediaSelector__Grid\">\n            {\n              items.map((item, index) => (              \n                <FirebaseImage \n                  onSelect={(url) => {\n                    setSelection(index);\n                    setUrl(url);\n                  }} \n                  selected={index === selection} \n                  image={item} />\n              ))\n            }\n          </div>\n        </Dialog>\n      }\n    </div>\n  )\n}\n\nexport default MediaSelector;","import React from 'react';\nimport { EditorComponentProps } from \".\";\nimport MediaSelector from \"../../dialog/MediaSelector\";\n\ninterface ImageEditorProps extends EditorComponentProps {}\n\nconst ImageEditor: React.FC<ImageEditorProps> = ({onUpdateField, path, value}) => {\n  return (\n    <div className=\"RFC__Editable__Dialog__Image\">\n      <input \n              onChange={(e) => onUpdateField(path, e.target.value)} \n              id={path} \n              value={value} />\n      <MediaSelector onSelect={v => onUpdateField(path, v)} />\n    </div>\n  );\n\n}\n\nexport default ImageEditor;","import React from 'react';\nimport { EditorComponentProps } from \".\";\n\ninterface NumberEditorProps extends EditorComponentProps {}\n\nconst NumberEditor: React.FC<NumberEditorProps> = ({onUpdateField, path, value}) => {\n  return (\n    <>\n      <input \n              type='number'\n              onChange={(e) => onUpdateField(path, e.target.value)} \n              id={path} \n              value={value} />\n    </>);\n\n}\n\nexport default NumberEditor;","import React from 'react';\nimport { createRef, useCallback, useEffect, useState } from \"react\";\nimport { ComponentDefinition } from \"./Editable\";\nimport ImageEditor from \"./Editable/ImageEditor\";\nimport NumberEditor from \"./Editable/NumberEditor\";\n\ninterface ParallaxProps {\n  src: string;\n  zoom: number;\n}\n\nconst Parallax: React.FC<ParallaxProps> = ({src, zoom}) => {\n  const ref = createRef<HTMLDivElement>();\n  const [offset, setOffset] = useState(-1);\n\n  const scrollHandler = useCallback(() => {    \n    const offset = ref.current?.getBoundingClientRect()?.top || 0;\n    const percent = offset / window.innerHeight / 2;\n    setOffset(percent - 1);\n  }, [ref])\n\n  useEffect(() => { \n    window.addEventListener('scroll', scrollHandler);\n    return () => { window.removeEventListener('scroll', scrollHandler)}\n  }, [scrollHandler]);\n\n  return (\n    <div ref={ref} className=\"RFC__Parallax\">\n      <div className=\"RFC__Parallax__Inner\" \n           style={{backgroundImage: `url(${src})`, \n                  width: `100%`,\n                  height: `calc(100% + ${zoom * 2}px)`,\n                  backgroundPositionY: `calc(${zoom * offset}px)`,\n                  }}/>\n\n    </div>\n  )\n}\n\nexport const ParallaxDefinition: ComponentDefinition = {\n  name: 'Parallax',\n  key: 'Parallax',\n  component: Parallax,\n  Editor: ({onDataSet, data}) => {\n    const parsed = JSON.parse(data || '{}');\n    const [src, setSrc] = useState(parsed?.src || '')\n    const [zoom, setZoom] = useState(parsed?.zoom || '0')\n\n    useEffect(() => {\n      onDataSet(JSON.stringify({src, zoom}));\n    }, [src, zoom]);\n\n    return (\n      <div className=\"RFC__EditorStyles__Editor__Form\">\n        <span>Source</span>\n        <ImageEditor value={parsed.src} path='' onUpdateField={(_, value) => setSrc(value)} />\n        <span>Zoom</span>\n        <NumberEditor value={parsed.zoom} path='' onUpdateField={(_, value) => setZoom(value)} />\n      </div>\n    )\n  }\n}\n\nexport default Parallax;","import React from 'react';\nimport { EditorComponentProps } from \".\";\n\ninterface StringEditorProps extends EditorComponentProps {}\n\nconst StringEditor: React.FC<StringEditorProps> = ({onUpdateField, path, value}) => {\n  return (\n    <>\n      <input \n              onChange={(e) => onUpdateField(path, e.target.value)} \n              id={path} \n              value={value} />\n    </>);\n\n}\n\nexport default StringEditor;","import React from 'react';\nimport { useEffect, useState } from \"react\";\nimport { ComponentDefinition } from \"./Editable\";\nimport StringEditor from \"./Editable/StringEditor\";\n\ninterface ImageTextProps {\n  src: string;\n  imageStyle?: any;\n  textStyle?: any;\n  imageClass?: string;\n  textClass?: string;\n  alt?: string;\n  style?: any;\n}\n\nexport const ImageText: React.FC<ImageTextProps> = ({alt, style, imageStyle, textStyle, imageClass, textClass, src}) => {\n  if (src?.startsWith('http')) {\n    return <img src={src} style={{...style, ...imageStyle}} className={imageClass} alt={alt} />\n  } else {\n    return <span style={{...style, ...textStyle}} className={textClass}>{src}</span>\n  }\n}\n\nexport const ImageTextDefinition: ComponentDefinition = {\n  name: 'Image / Text',\n  key: 'imageText',\n  component: ImageText,\n  Editor: ({onDataSet, data}) => {\n    const parsed = JSON.parse(data);\n    const [src, setSrc] = useState(parsed?.src)\n\n    useEffect(() => {\n      onDataSet(JSON.stringify({src}));\n    }, [src]);\n\n    return (\n      <div className=\"RFC__EditorStyles__Editor__Form\">\n        <span>Source</span>\n        <StringEditor value={parsed.src} path='' onUpdateField={(_, value) => setSrc(value)} />\n      </div>\n    )\n  }\n}\n","import React from 'react';\nimport { createContext, useContext } from 'react';\nimport { FirebaseAppProvider, DatabaseProvider, AuthProvider, StorageProvider, FirestoreProvider, useFirebaseApp } from 'reactfire';\nimport { getAuth } from 'firebase/auth';\nimport { getDatabase } from 'firebase/database';\nimport { getStorage } from 'firebase/storage';\nimport { getFirestore } from 'firebase/firestore';\nimport './style/index.scss';\n\nimport { ParallaxDefinition } from './component/Parallax';\nimport { ImageTextDefinition } from './component/ImageText';\nimport { ReactFireCmsConfig } from \"./interface/ReactFireCmsConfig\"\n\ninterface ReactFireCmsProps {\n  config: ReactFireCmsConfig;\n}\n\nconst ConfigContext = createContext(null as unknown as ReactFireCmsConfig);\n\nconst mergeConfig = (config: ReactFireCmsConfig) => ({\n  ...config,\n  components: [\n    ...config.components,\n    ParallaxDefinition,\n    ImageTextDefinition,\n  ]\n})\n\nconst FirebaseProvider: React.FC = ({children}) => {\n  const firebaseConfig = useConfig();\n  \n  return (\n    <FirebaseAppProvider firebaseConfig={firebaseConfig.firebase.config}>\n      {children}\n    </FirebaseAppProvider>\n  )\n}\n\nconst FirebaseComponents: React.FC = ({children}) => {\n  const app = useFirebaseApp();\n  const database = getDatabase(app);\n  const auth = getAuth(app);\n  const store = getStorage(app);\n  const firestore = getFirestore(app);\n\n  return (\n    <AuthProvider sdk={auth}>\n      <DatabaseProvider sdk={database}>\n        <StorageProvider sdk={store}>\n          <FirestoreProvider sdk={firestore}>\n            {children}\n          </FirestoreProvider>\n        </StorageProvider>\n      </DatabaseProvider>\n    </AuthProvider>\n  )\n}\n\nexport const useConfig = () => useContext(ConfigContext);\n\nexport const ReactFireCms: React.FC<ReactFireCmsProps> = ({config, children}) => {\n  return (\n    <ConfigContext.Provider value={mergeConfig(config)}>\n      <FirebaseProvider>\n        <FirebaseComponents>\n          {children}\n        </FirebaseComponents>\n      </FirebaseProvider>\n    </ConfigContext.Provider> \n  )\n}","import React from 'react';\nimport { ContentState, convertToRaw, EditorState } from 'draft-js';\nimport { Editor } from 'react-draft-wysiwyg';\nimport { EditorComponentProps } from \".\";\nimport draftToHtml from 'draftjs-to-html';\nimport htmlToDraft from 'html-to-draftjs';\n\ninterface LongFormEditorProps extends EditorComponentProps {}\n\nconst LongFormEditor: React.FC<LongFormEditorProps> = ({onUpdateField, path, value}) => {\n  const blocks = htmlToDraft(value);\n  const state = ContentState.createFromBlockArray(\n    blocks.contentBlocks,\n    blocks.entityMap\n  );\n  const editorState = EditorState.createWithContent(state)  \n\n  return (\n    <>\n      <div className=\"RFC__Editable__Dialog__RichEditor\">\n        <Editor \n                defaultEditorState={editorState}\n                onEditorStateChange={(e: any) => {\n                  onUpdateField(path, draftToHtml(convertToRaw(e.getCurrentContent())))\n                }}/>\n      </div>\n    </>\n  ) \n}\n\nexport default LongFormEditor;","import React from 'react';\nimport { useEffect } from \"react\";\nimport { ChangeEvent, useCallback, useState } from \"react\";\nimport { EditorComponentProps } from \".\";\nimport { useConfig } from \"../../ReactFireCms\";\n\ninterface ComponentEditorProps extends EditorComponentProps {}\n\nconst ComponentEditor: React.FC<ComponentEditorProps> = ({onUpdateField, path, value}) => {\n  const input = JSON.parse(value || '{}');\n  const rfcConfig = useConfig();\n  \n  const [component, setComponent] = useState(input.component || '')\n  const [data, setData] = useState(input.data || '{}')\n\n  useEffect(() => {\n    const output = {\n      component,\n      data\n    };\n    onUpdateField(path, JSON.stringify(output));\n  }, [data, component]);\n\n  const onOptionSelect = useCallback((e: ChangeEvent<HTMLSelectElement>) => {\n    setComponent(e.target.value)\n  }, []);\n\n  const onDataSet = useCallback((data: string) => {\n    setData(data);\n  }, [])\n\n  const Editor = rfcConfig.components.find(it => it.key === component)?.Editor;\n\n  return (\n    <>\n      <select value={component} onChange={onOptionSelect}>\n        <option>Select a Component</option>\n        { rfcConfig.components.map(c => <option value={c.key}>{c.name}</option>)}\n      </select>\n      { Editor && <Editor onDataSet={onDataSet} data={data} />}\n    </>);\n\n}\n\nexport default ComponentEditor;","import React from 'react';\nimport { doc, setDoc } from \"firebase/firestore\";\nimport { FormEvent, useCallback, useEffect, useState } from \"react\";\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\nimport { useHotkeys } from \"react-hotkeys-hook\";\nimport { FaPencilAlt } from \"react-icons/fa\";\nimport { useUser, useFirestore, useFirestoreDocData } from \"reactfire\";\nimport { Dialog, Buttons, DialogProps } from \"../Dialog\";\nimport StringEditor from \"./StringEditor\";\nimport ImageEditor from \"./ImageEditor\";\nimport LongFormEditor from \"./LongFormEditor\";\nimport ComponentEditor from \"./ComponentEditor\";\n\nexport type FieldType = 'string' | 'longform' | 'boolean' | 'image' | 'component';\n\nexport interface EditorField {\n  name: string,\n  hint?: string,\n  type: FieldType,\n}\n\nexport type OnDataSet = (data: string) => void;\n\nexport interface ComponentDefinition {\n  name: string;\n  key: string;\n  component: any;\n  Editor: React.FC<{onDataSet: OnDataSet, data: string}>;\n}\n\nexport interface EditorComponentProps {\n  onUpdateField: (key: string, value: string) => void;\n  path: string;\n  value: string;\n}\n\ninterface EditableProps {\n  fields: EditorField[]\n  path: string,\n  style?: any,\n  className?: any,\n}\n\ninterface EditableDialogProps extends DialogProps {\n  fields: EditorField[],\n  path: string,\n}\n\nconst EditableDialog: React.FC<EditableDialogProps> = ({open, fields, path, onClose}) => {\n  const firestore = useFirestore();\n  const document = doc(firestore, path);\n  const data = useFirestoreDocData(document);\n  const [error, setError] = useState('')\n  const [toSubmit, setToSubmit] = useState({} as {[key:string]: any})\n\n  useEffect(() => {\n    setToSubmit(\n      fields.reduce((p, c) => {\n        const current = p;\n        current[c.name] = data.data?.[c.name] || '';\n        return current;\n      }, {} as {[key:string]: any})\n    )\n  }, [fields, data]);\n\n  const submitChanges = (e?: FormEvent) => {\n    e?.preventDefault();\n    setDoc(document, toSubmit, {merge: true})\n      .then(onClose)\n      .catch((e) => setError(e));\n  }\n\n  const updateField = useCallback((name: string, value: any) => {\n    const copy = {...toSubmit};\n    copy[name] = value;\n    setToSubmit(copy);\n  }, [toSubmit]);\n\n  const buttons: Buttons = [\n    { label: 'Cancel', action: () => onClose?.()},\n    { label: 'Save', action: submitChanges },\n  ]\n\n  const renderEditor = (field: EditorField) => {\n    switch (field.type) {\n      case 'string':\n        return <StringEditor onUpdateField={updateField} path={field.name} value={toSubmit[field.name]} />\n      case 'image':\n        return <ImageEditor onUpdateField={updateField} path={field.name} value={toSubmit[field.name]} />\n      case 'longform':\n        return <LongFormEditor onUpdateField={updateField} path={field.name} value={toSubmit[field.name]} />\n      case 'component':\n        return <ComponentEditor onUpdateField={updateField} path={field.name} value={toSubmit[field.name]} />\n      default:\n        return <></>;  \n    }\n  }\n\n  return (\n    <Dialog title=\"Edit Fields\" {...{onClose, open}} buttons={buttons}>\n      { open && (\n        <form className=\"RFC__Editable__Dialog\" onSubmit={submitChanges}>\n        <span className='Text__Error'>{error}</span>\n        {\n          fields?.map(field => (\n            <div key={field.name} className=\"RFC__Editable__Dialog__Field\">\n              <div className=\"RFC__Editable__Dialog__Label\">\n                {field.hint || field.name}\n              </div>\n              { renderEditor(field) }\n            </div>\n          ))\n        }\n      </form>\n      )\n    }\n    </Dialog>\n  )\n}\n\nexport const Editable: React.FC<EditableProps> = ({fields, style, path, className, children}) => {\n  const user = useUser();\n  const [shown, setShown] = useState(false);\n  const [highlight, setHighlight] = useState(false);\n  const [preview, setPreview] = useState(false);\n\n  useHotkeys('e', () => { setHighlight(true) });\n  useHotkeys('e', () => { setHighlight(false) }, { keydown: false, keyup: true });\n  useHotkeys('p', () => { setPreview(true) });\n  useHotkeys('p', () => { setPreview(false) }, { keydown: false, keyup: true });\n\n  return user.data ? (\n    <div style={style} className={`${className} RFC__Editable ${preview && 'RFC__Editable--Preview'}`}>\n      {children}\n      <EditableDialog path={path} open={shown} fields={fields} onClose={() => setShown(false)} />\n      <div className={`RFC__Editable__Pencil ${highlight && 'RFC__Editable__Pencil--Highlight'} ${preview && 'RFC__Editable__Pencil--Preview'}`}>\n        <FaPencilAlt onClick={() => setShown(true)} className=\"RFC__Editable__Pencil__Text\" />\n      </div>\n    </div>\n  ) : (<>{children}</>)\n}","import React from 'react';\nimport { useConfig } from '../ReactFireCms';\n\ninterface DynamicComponentProps {\n  content: string;\n  className?: string;\n  style?: string;\n}\n\nexport const DynamicComponent: React.FC<DynamicComponentProps> = ({content, className, style}) => {\n  const config = useConfig();\n  const parsed = JSON.parse(content || '{}');\n  const component = parsed?.component;\n  const props = JSON.parse(parsed?.data || '{}');\n  const Component = config.components.find(it => it.key === component)?.component;\n\n  return (\n    Component ? <Component {...props} className={className} style={style} /> : <></>\n  )\n}","import React from 'react';\nimport { signInWithEmailAndPassword, setPersistence, browserSessionPersistence } from 'firebase/auth';\nimport { useCallback, useState } from 'react';\nimport { useAuth } from 'reactfire'\nimport { Dialog, Buttons, DialogProps } from '../component/Dialog'\n\nexport interface LoginProps extends DialogProps {}\n\nexport const Login: React.FC<LoginProps> = ({open, onClose}) => {\n  const auth = useAuth();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const doLogin = useCallback((e) => {\n    e?.preventDefault();\n    setPersistence(auth, browserSessionPersistence)\n      .then(() => signInWithEmailAndPassword(auth, email, password)) \n      .then(onClose)\n  }, [email, password, auth, onClose]);\n\n  const buttons: Buttons = [\n    {label: 'Login', action: doLogin}\n  ]\n  return (\n    <Dialog title=\"Login\" open={open} onClose={onClose} buttons={buttons}>\n      <form onSubmit={doLogin}\n            className=\"RFC__LoginDialog__Content\">\n        <label htmlFor=\"email\">Email</label>\n        <input value={email} onChange={v => setEmail(v.target.value)} type=\"email\" id=\"email\" />\n        <label htmlFor=\"password\">Password</label>\n        <input value={password} onChange={v => setPassword(v.target.value)} type=\"password\" id=\"password\"/>\n      </form>\n    </Dialog>\n  )\n}\n","import React from 'react';\nimport { signOut, setPersistence, browserSessionPersistence } from 'firebase/auth';\nimport { useCallback } from 'react';\nimport { useAuth } from 'reactfire'\nimport { Dialog, Buttons, DialogProps } from '../component/Dialog'\n\nexport interface LogoutProps extends DialogProps {}\n\nexport const Logout: React.FC<LogoutProps> = ({open, onClose}) => {\n  const auth = useAuth();\n\n  const doLogout = useCallback(() => {\n    setPersistence(auth, browserSessionPersistence)\n      .then(() => signOut(auth))\n      .then(onClose);  \n  }, [auth, onClose]);\n\n  const buttons: Buttons = [\n    { label: 'Cancel', action: () => onClose?.() }, \n    { label: 'Logout', action: doLogout, type: 'warning' }\n  ];\n  \n  return (\n    <Dialog \n      title=\"Login\" \n      open={open} \n      onClose={onClose}\n      buttons={buttons}>\n      Are you sure you wish to logout?\n    </Dialog>\n  )\n}\n"],"names":["Dialog","title","children","buttons","onClose","open","React","className","IoCloseSharp","onClick","map","it","key","label","disabled","type","action","FirebaseImage","props","image","selected","onSelect","useState","url","setUrl","useEffect","getDownloadURL","then","console","error","src","alt","name","MediaSelector","config","useConfig","setError","setOpen","items","setItems","selection","setSelection","storage","useStorage","showDialog","useCallback","e","preventDefault","listAll","ref","firebase","bucket","r","useMemo","item","index","ImageEditor","onUpdateField","path","onChange","target","value","id","v","NumberEditor","ParallaxDefinition","component","zoom","createRef","offset","setOffset","scrollHandler","percent","current","getBoundingClientRect","top","window","innerHeight","addEventListener","removeEventListener","style","backgroundImage","width","height","backgroundPositionY","Editor","onDataSet","parsed","JSON","parse","data","setSrc","setZoom","stringify","_","StringEditor","ImageText","imageStyle","textStyle","imageClass","textClass","startsWith","ImageTextDefinition","ConfigContext","createContext","FirebaseProvider","firebaseConfig","FirebaseAppProvider","FirebaseComponents","app","useFirebaseApp","database","getDatabase","auth","getAuth","store","getStorage","firestore","getFirestore","AuthProvider","sdk","DatabaseProvider","StorageProvider","FirestoreProvider","useContext","LongFormEditor","blocks","htmlToDraft","state","ContentState","createFromBlockArray","contentBlocks","entityMap","editorState","EditorState","createWithContent","defaultEditorState","onEditorStateChange","draftToHtml","convertToRaw","getCurrentContent","ComponentEditor","input","rfcConfig","setComponent","setData","onOptionSelect","components","find","_rfcConfig$components","c","EditableDialog","fields","useFirestore","document","doc","useFirestoreDocData","toSubmit","setToSubmit","reduce","p","submitChanges","setDoc","merge","updateField","copy","onSubmit","field","hint","renderEditor","content","Component","_config$components$fi","user","useUser","shown","setShown","highlight","setHighlight","preview","setPreview","useHotkeys","keydown","keyup","FaPencilAlt","useAuth","email","setEmail","password","setPassword","doLogin","setPersistence","browserSessionPersistence","signInWithEmailAndPassword","htmlFor","signOut","Provider"],"mappings":"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"}